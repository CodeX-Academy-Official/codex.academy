name: CICD
on: push
jobs:

#    ______            __  _                              
#   / ____/___  ____  / /_(_)___  __  ______  __  _______ 
#  / /   / __ \/ __ \/ __/ / __ \/ / / / __ \/ / / / ___/ 
# / /___/ /_/ / / / / /_/ / / / / /_/ / /_/ / /_/ (__  )  
# \____/\____/_/_/_/\__/_/_/ /_/\__,_/\____/\__,_/____/   
#    /  _/___  / /____  ____ __________ _/ /_(_)___  ____ 
#    / // __ \/ __/ _ \/ __ `/ ___/ __ `/ __/ / __ \/ __ \
#  _/ // / / / /_/  __/ /_/ / /  / /_/ / /_/ / /_/ / / / /
# /___/_/ /_/\__/\___/\__, /_/   \__,_/\__/_/\____/_/ /_/ 
#                    /____/                               

  build:
    needs: [security-audit]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Setup Node
        uses: actions/setup-node@v1
        with: 
          node-version: 13.x
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm i

      - name: Build the code
        run: npm run build

      - name: Store Artifact 
        uses: actions/upload-artifact@v2
        with:
          name: website-dist
          path: dist

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Setup Node
        uses: actions/setup-node@v1
        with: 
          node-version: 13.x
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm i

      - name: Test the code
        run: npm run test

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Setup Node
        uses: actions/setup-node@v1
        with: 
          node-version: 13.x
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm i

      - name: Lint the code
        run: echo Another day #npm run lint
    
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
 
      - name: Check for security issue
        run: echo Do this another time when Byron has the patience #npm audit --audit-level=critical #or "high"
  
  static-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
  
      - run: echo This takes entirely too long!
      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v1
      #   with:
      #     languages: javascript
  
      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v1


#    ______            __  _                                 
#   / ____/___  ____  / /_(_)___  __  ______  __  _______    
#  / /   / __ \/ __ \/ __/ / __ \/ / / / __ \/ / / / ___/    
# / /___/ /_/ / / / / /_/ / / / / /_/ / /_/ / /_/ (__  )     
# \____/\____/_/ /_/\__/_/_/ /_/\__,_/\____/\__,_/____/   __ 
#    / __ \___  ____  / /___  __  ______ ___  ___  ____  / /_
#   / / / / _ \/ __ \/ / __ \/ / / / __ `__ \/ _ \/ __ \/ __/
#  / /_/ /  __/ /_/ / / /_/ / /_/ / / / / / /  __/ / / / /_  
# /_____/\___/ .___/_/\____/\__, /_/ /_/ /_/\___/_/ /_/\__/  
#           /_/            /____/                            
    
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [test, lint, static-analysis]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1

      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: website-dist
          path: dist
          
      - name: Publish
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist