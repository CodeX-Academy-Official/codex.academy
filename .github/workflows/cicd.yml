name: Continuous Delivery
on:
  push:
    branches:
      - master
      - staging
  pull_request:

jobs:

#
#   ______   ______   .__   __. .___________. __  .__   __.  __    __    ______    __    __       _______.     
#  /      | /  __  \  |  \ |  | |           ||  | |  \ |  | |  |  |  |  /  __  \  |  |  |  |     /       |     
# |  ,----'|  |  |  | |   \|  | `---|  |----`|  | |   \|  | |  |  |  | |  |  |  | |  |  |  |    |   (----`     
# |  |     |  |  |  | |  . `  |     |  |     |  | |  . `  | |  |  |  | |  |  |  | |  |  |  |     \   \         
# |  `----.|  `--'  | |  |\   |     |  |     |  | |  |\   | |  `--'  | |  `--'  | |  `--'  | .----)   |        
#  \______| \______/  |__| \__|     |__|     |__| |__| \__|  \______/   \______/   \______/  |_______/         
                                                                                                             
#  __  .__   __. .___________. _______   _______ .______          ___   .___________. __    ______   .__   __. 
# |  | |  \ |  | |           ||   ____| /  _____||   _  \        /   \  |           ||  |  /  __  \  |  \ |  | 
# |  | |   \|  | `---|  |----`|  |__   |  |  __  |  |_)  |      /  ^  \ `---|  |----`|  | |  |  |  | |   \|  | 
# |  | |  . `  |     |  |     |   __|  |  | |_ | |      /      /  /_\  \    |  |     |  | |  |  |  | |  . `  | 
# |  | |  |\   |     |  |     |  |____ |  |__| | |  |\  \----./  _____  \   |  |     |  | |  `--'  | |  |\   | 
# |__| |__| \__|     |__|     |_______| \______| | _| `._____/__/     \__\  |__|     |__|  \______/  |__| \__| 
                                                                                                             
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: Install Dependencies
        run: npm i

      - name: Build
        run: npm run build
      
      - name: Store Artifact 
        uses: actions/upload-artifact@v2
        with:
          name: website-dist
          path: dist
  
  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
  
      - name: Lint the code
        run: echo Simulating lint #npm run lint 

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
  
      - name: Run Unit Tests
        run: npm t

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
 
      - name: Check for security issue
        run: npm audit --audit-level=critical #or "high"

  static-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
  
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
  
      - name: Perform Analysis
        #uses: github/codeql-action/analyze@v1
        run: echo Simulating static analysis

#    _____            _   _                                  
#   / ____|          | | (_)                                 
#  | |     ___  _ __ | |_ _ _ __  _   _  ___  _   _ ___      
#  | |    / _ \| '_ \| __| | '_ \| | | |/ _ \| | | / __|     
#  | |___| (_) | | | | |_| | | | | |_| | (_) | |_| \__ \     
#   \_____\___/|_| |_|\__|_|_| |_|\__,_|\___/ \__,_|___/ _   
#  |  __ \           | |                                | |  
#  | |  | | ___ _ __ | | ___  _   _ _ __ ___   ___ _ __ | |_ 
#  | |  | |/ _ \ '_ \| |/ _ \| | | | '_ ` _ \ / _ \ '_ \| __|
#  | |__| |  __/ |_) | | (_) | |_| | | | | | |  __/ | | | |_ 
#  |_____/ \___| .__/|_|\___/ \__, |_| |_| |_|\___|_| |_|\__|
#              | |             __/ |                         
#              |_|            |___/                          

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build, test, lint, security-audit, static-analysis]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      
      - name: Tag 
        id: autotagger
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.autotagger.outputs.tagname }}
          release_name: Version ${{ steps.autotagger.outputs.version }}
          body: ${{ steps.autotagger.outputs.tagmessage }}
          draft: false
          prerelease: true

      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: website-dist
          path: dist

      - name: Publish
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i

      - name: Smoke Test
        run: export TEST_URL=https://codex.academy && npm run smoke

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          id: ${{ steps.create_release.id }}
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
      - name: Rebuild Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        run: npm i && npm run build
      
      - name: Re-Publish Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist
